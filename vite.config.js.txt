// vite.config.js
import { defineConfig, loadEnv } from "vite";
import react from "@vitejs/plugin-react";
import { VitePWA } from "vite-plugin-pwa";

export default defineConfig(({ mode }) => {
  // .env.* laden (optional)
  const env = loadEnv(mode, process.cwd(), "");

  // Wenn du nativ (Capacitor) baust, setze CAPACITOR=true
  // Beispiel:  setx CAPACITOR true   (Windows)  oder  CAPACITOR=true npm run build
  const isCapacitor = env.CAPACITOR === "true" || process.env.CAPACITOR === "true";

  return {
    // Wichtig:
    // - Für Web (Vercel/Browser): base: '/'
    // - Für Capacitor (Android/iOS): base: './'  (relative Pfade!)
    base: isCapacitor ? "./" : "/",

    plugins: [
      react(),
      // PWA nur fürs Web sinnvoll; in Capacitor stört der SW oft.
      // Wir lassen ihn aktiv, aber er funktioniert nur im Web-Build (base:'/').
      VitePWA({
        registerType: "autoUpdate",
        includeAssets: ["favicon.svg", "robots.txt", "apple-touch-icon.png"],
        manifest: {
          name: "Zeiterfassung",
          short_name: "Zeiterfassung",
          start_url: "/",
          display: "standalone",
          background_color: "#ffffff",
          theme_color: "#ffffff",
          icons: [
            { src: "/pwa-192x192.png", sizes: "192x192", type: "image/png" },
            { src: "/pwa-512x512.png", sizes: "512x512", type: "image/png" },
            { src: "/pwa-512x512-maskable.png", sizes: "512x512", type: "image/png", purpose: "maskable" }
          ],
        },
        // In Dev sorgt das Plugin bereits für einen SW in dev-dist.
        devOptions: { enabled: true },
      }),
    ],

    build: {
      outDir: "dist",              // Muss zu capacitor.config.* -> webDir passen
      assetsDir: "assets",
      sourcemap: false,
      // Optional: Warnung wegen großer Bundles entschärfen
      chunkSizeWarningLimit: 1000,
    },

    // Optional: lokal im Netzwerk testen
    server: {
      host: true,
      port: 5173,
    },
    preview: {
      host: true,
      port: 4173,
    },
  };
});
